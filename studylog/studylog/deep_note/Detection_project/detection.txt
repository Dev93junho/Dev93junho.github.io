ssh user_id@ip
#접속 완료
sudo apt update
sudo apt install python3-pip

#???
pip3 install launchpadlib

#tensorflow 설치
#cuda
#pip3 install tensorflow-gpu
pip3 install tensorflow

mkdir ~/mpii
cd ~/mpii

wget https://datasets.d2.mpi-inf.mpg.de/andriluka14cvpr/mpii_human_pose_v1.tar.gz
wget https://datasets.d2.mpi-inf.mpg.de/andriluka14cvpr/mpii_human_pose_v1_u12_2.zip

tar -xf mpii_human_pose_v1.tar.gz
sudo apt install unzip
unzip mpii_human_pose_v1_u12_2.zip


##########
##vscode셋팅
extension(왼쪽 네모 모양) - ssh로 검색
Remote - SSH => 설치
설치 끝나면 왼쪽 아래 >< 버튼 생김
버튼 누르고 Connect to Host ...
+ New.. 선택
ssh 명령어 입력

다시 >< 버튼, Connect to Host..
아까 만들어둔 ip 클릭

extension -> python 검색

#########################
##mpii to head dataset 변환 프로젝트
mpii_to_head_dataset.py 에서 root_dir만 수정

#패키지 안 깔렸으면 
pip3 install numpy
pip3 install scipy

mpii_to_head_dataset.py 실행

#라벨맵 생성
~/mpii/records/label_map.pbtxt
#label_map.pbtxt
item {
  name: "head"
  id: 1
}

#####################
#object detection api 설치

#터미널에서
cd ~
git clone https://github.com/tensorflow/models

#protoc 인스톨
sudo apt install protobuf-compiler
python3 -m pip install --upgrade pip

# https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2.md
cd models/research
# Compile protos.
protoc object_detection/protos/*.proto --python_out=.
# Install TensorFlow Object Detection API.
cp object_detection/packages/tf2/setup.py .
python3 -m pip install --use-feature=2020-resolver .

###########
#vscode에서
/home/id/models/research 폴더 오픈
research/object_detection/dataset_tools/create_coco_tf_record.py
 -> test 로 검색해서 주석처리 58 63 64 478 481 487 509~514
 -> 494 504 num_shards 옵션 수정
 
 launch.json 생성
 
{
            "name": "build RECORD",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/object_detection/dataset_tools/create_coco_tf_record.py",
            "console": "integratedTerminal",
            "args":[
                "--train_image_dir=/home/ladofa/mpii",
                "--val_image_dir=/home/ladofa/mpii",
                "--train_annotations_file=/home/ladofa/mpii/mpii_coco_train.json",
                "--val_annotations_file=/home/ladofa/mpii/mpii_coco_val.json",
                "--output_dir=/home/ladofa/mpii/records"
            ]
        },
        
#터미널에서        
mkdir ~/mpii/records

#pycocotools 에러가 났으면
pip3 uninstall pycocotools
pip3 uninstall numpy
pip3 install pycocotools

#model zoo
https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2_detection_zoo.md

cd ~/models/research
mkdir nets
cd nets
wget http://download.tensorflow.org/models/object_detection/tf2/20200711/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8.tar.gz
tar -xf ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8.tar.gz




#pipeline.config 수정
 -> num_classes
 PATH_TO_BE_CONFIGURED -> 반드시 수정
 
 fine_tune_checkpoint: "/home/ladofa/models/research/nets/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/checkpoint/ckpt-0"
 
 fine_tune_checkpoint_type: "detection"
 
 train_input_reader {
  label_map_path: "/home/ladofa/mpii/records/label_map.pbtxt"
  tf_record_input_reader {
    input_path: "/home/ladofa/mpii/records/coco_train.record*"
  }
}
eval_config {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
}
eval_input_reader {
  label_map_path: "/home/ladofa/mpii/records/label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "/home/ladofa/mpii/records/coco_val.record*"
  }
}

  ###############
  #학습 실행
  #터미널에서
  mkdir ~/mpii/result
  
  #launch.json
   {
            "name": "train mpii",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/object_detection/model_main_tf2.py",
            "console": "integratedTerminal",
            "args":[
                "--model_dir=/home/ladofa/mpii/result",
                "--pipeline_config_path=/home/ladofa/models/research/nets/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/pipeline.config",
                "--alsologtostderr"
            ]
        },

#libGL.so.1: cannot open shared object file: No such file or directory
sudo apt install libgl1-mesa-glx



#########################
bucket 생성
#레코드 업로드
cd ~/mpii
gsutil cp -r records gs://ladofa9
cd ~/models/research/nets
gsutil cp -r ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8 gs://ladofa9

#파이프라인 경로 수정!

#compute engine -> tpu
#이름, 영역, 유형(v3-8), 버전(2.5) 셋팅해서 생성

#launch.json tpu 버전 생성
{
            "name": "train mpii - tpu",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/object_detection/model_main_tf2.py",
            "console": "integratedTerminal",
            "args":[
                "--model_dir=gs://ladofa9/head",
                "--pipeline_config_path=/home/ladofa9/models/research/nets/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/pipeline.config",
                "--alsologtostderr",
                "--use_tpu=true",
                "--tpu_name=node-1",
            ]
        },


#실행!!


#tflite 변환
{
            "name": "tf2-EXPORT-lite head",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/object_detection/export_tflite_graph_tf2.py",
            "console": "integratedTerminal",
            "args":[
                "--pipeline_config_path=/home/ladofa9/models/research/nets/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/pipeline.config",
                "--trained_checkpoint_dir=gs://ladofa9/head",
                "--output_directory=/home/ladofa9/mpii/export-lite",
            ]
        },
        
#tfLite는 인풋 사이즈가 고정되어야 한다.
#pipeline.config에서 다음 사항을 확인
 image_resizer {
      fixed_shape_resizer

#output directory로 가서
cd ~/mpii/export-lite
tflite_convert --output_file=head.tflite --saved_model_dir=saved_model
